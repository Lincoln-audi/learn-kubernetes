Zookeeper 参数优化


JVM参数优化

由于开源版本默认配置没有做JVM参数优化、导致zookeeper进程发生多次Fullgc，影响服务端响应请求
目前JVM使用情况： MaxHeapSize (30718.0MB)、 capacity = 347602944 (331.5MB)、capacity = (30.5MB)、capacity = (30.0MB)、Old Generation  94% used
增大JVM的Xmx内存、调大Young Generation内存大小，避免old Generation 内存一直增加从而减少Fullgc影响
添加 /app/zookeeper/conf/java.env文件
内容如果下:

JVMFLAGS="-Xmx6G -Xms6G -Xmn3g -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Xloggc:../logs/gc$$.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=10M -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps"





服务端日志打印优化

由于zookeeper重启会自动清除zookeeper.out日志、以及zookeeper.out实际上是nohup的输出、日志打印在一个文件会不断增大、不利于排查问题时查看文件
配置zookeeper.out的位置及log4j滚动日志输出
修改 conf/log4j.properties：

zookeeper.root.logger=INFO,CONSOLE
改为
zookeeper.root.logger=INFO,ROLLINGFILE


按天轮转输出日志、修改conf/log4j.properties：

log4j.appender.ROLLINGFILE=org.apache.log4j.RollingFileAppender
改为
log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender


修改为日志分割方式 bin/zkEvn.sh

ZOO_LOG4J_PROP="INFO,CONSOLE"
改为
ZOO_LOG4J_PROP="INFO,ROLLINGFILE"





应用服务和定时任务数量日益增多、越来越依赖zookeeper集群、为了后续集群稳定性和便于维护、进行集群流量的拆分、减少请求压力。
