cAdvisor简介
cAdvisor（容器顾问）是由谷歌开发和维护的开源容器监控平台。它作为后台守护进程运行，用于收集、处理数据并将其聚合为性能特征、资源使用统计信息以及有关正在运行的容器的相关信息。

凭借对 Docker 和开箱即用的任何其他容器类型的内置支持，cAdvisor 可用于收集几乎任何类型的运行容器的数据。然后，这些数据可以被更大的、系统范围的监控平台抓取，为用户提供有关容器在整个系统环境中的健康或状态的信息。

将cAdvisor 与 Prometheus 结合使用来监控容器化服务已成为一种越来越普遍的做法。这是因为 cAdvisor Web 用户界面可用于探索 cAdvisor 监控的某些事物，例如容器 CPU 和内存使用情况，但它不提供探索其收集的容器指标的方法。

这就是 Prometheus 的用武之地。Prometheus 抓取这些容器指标，对其进行处理，并使用其表达式浏览器通过仪表板或通过第三方集成（如Grafana）使它们可用。


cAdvisor 指标概览
cAdvisor 为 Prometheus 导出各种容器指标，使您几乎可以监控正在运行的容器的各个方面。尽管某些指标相对于其他指标的重要性在很大程度上取决于容器上运行的实际进程，但本文旨在为一般用例提供前 10 个最重要的 cAdvisor 指标。

  

‍container_cpu_cfs_throttled_seconds_total
这测量了某个容器被限制的总时间。通常，可以限制容器的 CPU 使用率，以防止单个繁忙的容器通过带走所有可用的 CPU 资源而基本上阻塞其他容器。
节流通常是确保所有正在运行的容器上的基本服务可用的最低处理能力的好方法。该指标衡量容器的 CPU 使用率受到限制的总时间，观察此指标可提供将资源正确重新分配给特定容器所需的信息。例如，这可以通过调整 Docker 中 CPU 份额的设置来完成。‍

  

container_cpu_load_average_10s
这测量了过去 10 秒内容器 CPU 平均负载的值。监控 CPU 使用率对于确保其得到有效使用至关重要。它还可以深入了解哪些容器进程是计算密集型的，因此有助于为未来的 CPU 分配提供建议。‍

 

container_fs_io_time_seconds_total
这衡量了执行 I/O 所花费的累计秒数。它可以用作判断容器上运行的进程速度的基准，并有助于为未来的优化工作提供建议。‍

  

container_memory_usage_bytes
这测量当前内存使用情况，包括所有内存，无论何时访问。在每个容器的基础上进行跟踪，可以让您了解每个容器上进程的内存占用情况，同时有助于未来的优化或资源分配工作。‍

https://www.metricfire.com/blog/top-10-cadvisor-metrics-for-prometheus/

  

容器内存故障
这衡量了容器的内存使用限制被击中的次数。设置容器内存使用限制是一种很好的做法，以防止内存密集型任务通过使用所有可用内存而使同一服务器上的其他容器基本上处于饥饿状态。
这样，每个容器都有它可以使用的最大内存量，跟踪容器达到其内存使用限制的次数将有助于用户了解是否需要增加容器内存限制，或者是否需要按顺序进行调试找出内存消耗高的原因。‍

  

container_network_receive_errors_total
这测量通过网络接收字节时遇到的错误的累积计数。容器上的网络有时会变得棘手，因此在故障发生时密切关注它们至关重要。此指标仅让您知道入站流量发生了多少次故障，从而让您了解在何处寻找调试。‍

  

container_network_transmit_errors_total
这测量传输时遇到的错误的累积计数。与上面的指标类似，这将通过跟踪传输过程中发生的故障总数来帮助调试工作。‍

  

容器进程
该指标跟踪当前在容器内运行的进程数。始终了解容器的确切状态对于保持容器正常运行至关重要。因此，了解特定容器中当前正在运行的进程数可以深入了解事情是否正常运行，或者是否存在问题。‍

  

容器任务状态
该指标跟踪容器中处于给定状态（睡眠、运行、停止、不间断或等待）的任务或进程的数量。乍一看，此信息对于提供有关容器及其进程的状态或健康状况的实时信息至关重要。‍

  

container_start_time_seconds
虽然微妙，但该指标以秒为单位跟踪容器的启动时间，并且可以提供早期故障指示或健康容器实例的指示。‍   

指标对您的重要性在很大程度上取决于您的用例。对于仅用于执行读取操作的容器，关注 container_fs_writes_total 指标（跟踪已完成的写入操作的累积计数）是没有意义的。

我们建议查看此cAdvisor 文档页面以查找为 Prometheus 公开的所有指标，并根据您的用例，找出需要更多关注的指标。也就是说，上述指标可用于大多数容器监控场景，以便轻松了解正在运行的容器的状态。
