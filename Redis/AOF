AOF
优势：
1.同步：
a.每秒同步：异步完成，效率高，一旦系统宕机，修改的数据丢失
b.每修改同步：同步持久化，每分钟发生的变化记录到磁盘中，效率低，安全
c.不同步
2.日志写入操作追加模式append
a.系统宕机，不影响存在的内容
b.写入一半数据，若系统崩溃，下次启动redis，redis-check-aof工具解决数据一致性
3.如果日志过大，自动重写机制，修改的数据写入到到磁盘文件，创建新文件，记录产生的修改命令，重写切换时，保证数据安全
4.格式清晰的日志文件，完成数据的重建

劣势：
1.对于相同数据文件，相比RDB，AOF文件较大
2.效率低

配置：
vim  redis.conf
默认：
appendonly no #AOF方式默认关闭  
appendfilename appendonly.aof #配置文件
#appendfsync always #每修改一次，同步到磁盘上
appendsync everysec 每秒同步到磁盘一次
#appensync no 不同步

实践打开AOF：
appendonly yes
appendfsync always

终端2：先断开redis
./bin/redis-cli
shutdown
启动redis：
./bin/redis-server ./redis.conf

终端1：set name 100
终端2：产生appendonly.aof文件
终端1：flushall 清空数据库
终端2：
./bin/redis-cli shutdown
vim appendonly.aof
删除flushall
./bin/redis-server ./redis.conf
./bin/redis-cli
keys *
数据还原
