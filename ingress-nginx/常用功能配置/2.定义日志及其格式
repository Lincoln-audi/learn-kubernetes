apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-helloworld-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
       access_log /var/log/nginx/docker.com.access.log  upstreaminfo ;
       error_log  /var/log/nginx/docker.com.error.log;
spec:
  tls:
    - hosts: 
      - docker.fcbox.com
      secretName: https-443
  rules:
  - host: docker.fcbox.com
    http:
      paths:
      - backend:
          serviceName: docker-helloworld-svc
          servicePort: 8080
#############
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx

data:
  worker-processes: "4"
  use-forwarded-headers: "true"
  client-header-buffer-size: "512k"
  large-client-header-buffers: "4 512k"
  client-body-buffer-size: "128k"
  proxy-buffer-size: "256k"
  client-body-buffer-size: "128k"
  proxy-body-size: "50m"
  server-name-hash-bucket-size: "128"
  map-hash-bucket-size: "128"
  ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
  ssl-protocols: "TLSv1 TLSv1.1 TLSv1.2"
  log-format-upstream: "$remote_addr $time_local $request $status $body_bytes_sent $request_time  $uri $namespace $ingress_name $service_name $service_port  $http_user_agent $request_length  $upstream_addr $upstream_status $upstream_response_time $upstream_response_length $req_id"


#########
$proxy_protocol_addr	remote address if proxy protocol is enabled
$remote_addr	the source IP address of the client
$remote_user	user name supplied with the Basic authentication
$time_local	local time in the Common Log Format
$request	full original request line
$status	response status
$body_bytes_sent	number of bytes sent to a client, not counting the response header
$http_referer	value of the Referer header
$http_user_agent	value of User-Agent header
$request_length	request length (including request line, header, and request body)
$request_time	time elapsed since the first bytes were read from the client
$proxy_upstream_name	name of the upstream. The format is upstream-<namespace>-<service name>-<service port>
$proxy_alternative_upstream_name	name of the alternative upstream. The format is upstream-<namespace>-<service name>-<service port>
$upstream_addr	the IP address and port (or the path to the domain socket) of the upstream server. If several servers were contacted during request processing, their addresses are separated by commas.
$upstream_response_length	the length of the response obtained from the upstream server
$upstream_response_time	time spent on receiving the response from the upstream server as seconds with millisecond resolution
$upstream_status	status code of the response obtained from the upstream server
$req_id	the randomly generated ID of the request
Additional available variables:

Placeholder	Description
$namespace	namespace of the ingress
$ingress_name	name of the ingress
$service_name	name of the service
$service_port	port of the service


参考
https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/log-format/
